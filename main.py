from datetime import datetime
from logging import getLogger

from telegram import Update
from telegram import Bot
from telegram import InlineKeyboardMarkup
from telegram import InlineKeyboardButton
from telegram.ext import Updater
from telegram.ext import MessageHandler
from telegram.ext import CallbackContext
from telegram.ext import CommandHandler
from telegram.ext import CallbackQueryHandler
from telegram.ext import Filters


from Bot_on_server.config import TG_TOKEN
from Bot_on_server.currency_parser import DOLLAR, EURO, PETROL
#from Bot_on_server.utils import logger_factory



logger = getLogger(__name__)

#debug_requests = logger_factory(logger=logger)


def debug_request(f):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–∞"""
    def inner(*args, **kwargs):
        try:
            logger.info(f'–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é {f.__name__}')
            return f(*args, **kwargs)
        except Exception:
            logger.exception(f'–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ {f.__name__}')
            raise
    return inner


CALLBACK_BUTTON1_LEFT = 'callback_button1_left'
CALLBACK_BUTTON2_RIGHT = 'callback_button2_right'
CALLBACK_BUTTON3_MORE = 'callback_button3_more'
CALLBACK_BUTTON4_BACK = 'callback_button4_back'
CALLBACK_BUTTON5_TIME = 'callback_button5_time'
CALLBACK_BUTTON6_PRICE = 'callback_button6_price'
CALLBACK_BUTTON7_PRICE = 'callback_button7_price'
CALLBACK_BUTTON8_PRICE = 'callback_button8_price'
CALLBACK_BUTTON9_CLEAR = 'callback_button9_clear'


TITLES = {
CALLBACK_BUTTON1_LEFT: '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚úâ',
CALLBACK_BUTTON2_RIGHT: '–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ‚úí',
CALLBACK_BUTTON3_MORE:  '–ï—â—ë ‚ñ∂',
CALLBACK_BUTTON4_BACK : '–ù–∞–∑–∞–¥ ‚óÄ',
CALLBACK_BUTTON5_TIME: '–í—Ä–µ–º—è ‚è∞',
CALLBACK_BUTTON6_PRICE: '–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ üí≤',
CALLBACK_BUTTON7_PRICE: '–ö—É—Ä—Å –µ–≤—Ä–æ üí¥',
CALLBACK_BUTTON8_PRICE: '–ö—É—Ä—Å –Ω–µ—Ñ—Ç–∏ ‚õΩ',
CALLBACK_BUTTON9_CLEAR: '–û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—èüí®',
}


@debug_request
def get_base_inline_keyboard():
    """–ë–∞–∑–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON1_LEFT], callback_data=CALLBACK_BUTTON1_LEFT),
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON2_RIGHT], callback_data=CALLBACK_BUTTON2_RIGHT),
            ],
            [
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON3_MORE], callback_data=CALLBACK_BUTTON3_MORE),
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON9_CLEAR], callback_data=CALLBACK_BUTTON9_CLEAR),
            ]
        ],
    )
    return keyboard


@debug_request
def get_keyboard2():
    keyboard = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON5_TIME], callback_data=CALLBACK_BUTTON5_TIME),
            ],
            [
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON6_PRICE], callback_data=CALLBACK_BUTTON6_PRICE),
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON7_PRICE], callback_data=CALLBACK_BUTTON7_PRICE),
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON8_PRICE], callback_data=CALLBACK_BUTTON8_PRICE),
            ],
            [
                InlineKeyboardButton(TITLES[CALLBACK_BUTTON4_BACK], callback_data=CALLBACK_BUTTON4_BACK),
            ],
        ],
    )
    return keyboard


@debug_request
def keyboard_callback_handler(update: Update, callback: CallbackContext, chat_data=None, **kwargs):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Å–æ –≤—Å–µ—Ö –∫–ª–∞–≤–∏–∞–≤—Ç—É—Ä"""
    query = update.callback_query
    data = query.data
    current_time = datetime.now().strftime('%H:%M:%S')

    current_text = update.effective_message.text
    if data == CALLBACK_BUTTON1_LEFT:
        query.edit_message_text(
            text=current_text,
        )
        query.message.reply_text(
            text=f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n{current_time}",
            reply_markup=get_base_inline_keyboard(),
        )
    elif data == CALLBACK_BUTTON2_RIGHT:
        query.edit_message_text(
            text="–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ {}".format(current_time),
            reply_markup=get_base_inline_keyboard(),
        )
    elif data == CALLBACK_BUTTON3_MORE:
        query.edit_message_text(
            text=current_text,
            reply_markup=get_keyboard2()
        )
    elif data == CALLBACK_BUTTON4_BACK:
        query.edit_message_text(
            text=current_text,
            reply_markup=get_base_inline_keyboard(),
        )
    elif data == CALLBACK_BUTTON5_TIME:
        query.edit_message_text(
            text='–¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è {}'.format(current_time),
            reply_markup=get_keyboard2(),
        )
    elif data == CALLBACK_BUTTON6_PRICE:
        query.edit_message_text(
            text='–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è {}—Ä—É–±'.format(DOLLAR),
            reply_markup=get_keyboard2(),
        )
    elif data == CALLBACK_BUTTON7_PRICE:
        query.edit_message_text(
            text="–ö—É—Ä—Å –µ–≤—Ä–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è {}—Ä—É–±".format(EURO),
            reply_markup=get_keyboard2(),
        )
    elif data == CALLBACK_BUTTON8_PRICE:
        query.edit_message_text(
            text="–ö—É—Ä—Å –Ω–µ—Ñ—Ç–∏  {}—Ä—É–±".format(EURO),
            reply_markup=get_keyboard2(),
        )
    elif data == CALLBACK_BUTTON9_CLEAR:
        query.edit_message_text(
            text="–°–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã!",
            reply_markup=get_keyboard2(),
        )


@debug_request
def echo(update: Update, callback: CallbackContext):
    text = update.message.text

    text = f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {update.effective_user.first_name} \n\n –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - {text}'
    update.message.reply_text(
        text,
        reply_markup=get_base_inline_keyboard(),
    )


@debug_request
def do_help(update: Update, callback: CallbackContext):
    update.message.reply_text(
        text='–ó–∏—Å –∏–∑ –±–µ—Å—Ç —Ö–µ–ª–ø —ç–≤–µ—Ä!!!(–Ω–µ—Ç)',
    )


@debug_request
def show_time(update: Update, callback: CallbackContext):
    current_time = datetime.now().strftime('%H:%M:%S')
    text = f'–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è \n\n {current_time}'
    update.message.reply_text(text,)


@debug_request
def main():
    bot = Bot(
        token=TG_TOKEN,
    )
    updater = Updater(
        bot=bot,
        use_context=True
    )

    updater.dispatcher.add_handler(CommandHandler('help', do_help))
    updater.dispatcher.add_handler(CommandHandler('time', show_time))
    updater.dispatcher.add_handler(MessageHandler(Filters.all, echo))
    updater.dispatcher.add_handler(CallbackQueryHandler(callback=keyboard_callback_handler))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()